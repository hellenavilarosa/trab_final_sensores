Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./lib/avr_usart.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./lib/avr_i2c.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                              ./lib/avr_i2c.o (memset)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
                              ./main.o (__iob)

Allocating common symbols
Common symbol       size              file

rbuf                0x43              ./ringbuffer.o
i2c_status          0x8               ./lib/avr_i2c.o
__iob               0x6               c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
LOAD ./lib/avr_i2c.o
LOAD ./lib/avr_spi.o
LOAD ./lib/avr_usart.o
LOAD ./main.o
LOAD ./modbus.o
LOAD ./ringbuffer.o
LOAD ./sensores.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x656
 *(.vectors)
 .vectors       0x00000000       0x68 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000068                . = ALIGN (0x2)
                0x00000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000068        0x0 linker stubs
 *(.trampolines*)
                0x00000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000068                __ctors_start = .
 *(.ctors)
                0x00000068                __ctors_end = .
                0x00000068                __dtors_start = .
 *(.dtors)
                0x00000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000068        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x00000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000068        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000074       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000074                __do_copy_data
 .init4         0x0000008a       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009a        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000a2        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x000000a2                __vector_22
                0x000000a2                __vector_1
                0x000000a2                __vector_12
                0x000000a2                __bad_interrupt
                0x000000a2                __vector_6
                0x000000a2                __vector_3
                0x000000a2                __vector_23
                0x000000a2                __vector_25
                0x000000a2                __vector_11
                0x000000a2                __vector_13
                0x000000a2                __vector_17
                0x000000a2                __vector_19
                0x000000a2                __vector_7
                0x000000a2                __vector_5
                0x000000a2                __vector_9
                0x000000a2                __vector_2
                0x000000a2                __vector_21
                0x000000a2                __vector_15
                0x000000a2                __vector_8
                0x000000a2                __vector_14
                0x000000a2                __vector_10
                0x000000a2                __vector_16
                0x000000a2                __vector_20
 .text          0x000000a6        0x0 ./lib/avr_i2c.o
 .text          0x000000a6        0x0 ./lib/avr_spi.o
 .text          0x000000a6        0x0 ./lib/avr_usart.o
 .text          0x000000a6        0x0 ./main.o
 .text          0x000000a6        0x0 ./modbus.o
 .text          0x000000a6        0x0 ./ringbuffer.o
 .text          0x000000a6        0x0 ./sensores.o
 .text          0x000000a6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x000000a6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x000000a6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x000000a6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .text          0x000000a6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
                0x000000a6                . = ALIGN (0x2)
 *(.text.*)
 .text.i2c_write
                0x000000a6       0x34 ./lib/avr_i2c.o
                0x000000a6                i2c_write
 .text.i2c_read
                0x000000da       0x34 ./lib/avr_i2c.o
                0x000000da                i2c_read
 .text.__vector_24
                0x0000010e      0x17e ./lib/avr_i2c.o
                0x0000010e                __vector_24
 .text.i2c_init
                0x0000028c       0x2c ./lib/avr_i2c.o
                0x0000028c                i2c_init
 .text.SPI_MasterInit
                0x000002b8        0xa ./lib/avr_spi.o
                0x000002b8                SPI_MasterInit
 .text.SPI_Transmit
                0x000002c2        0xc ./lib/avr_spi.o
                0x000002c2                SPI_Transmit
 .text.SPI_SlaveReceive
                0x000002ce        0xc ./lib/avr_spi.o
                0x000002ce                SPI_SlaveReceive
 .text.get_usart_stream
                0x000002da        0x6 ./lib/avr_usart.o
                0x000002da                get_usart_stream
 .text.USART_Init
                0x000002e0       0x14 ./lib/avr_usart.o
                0x000002e0                USART_Init
 .text.USART_tx
                0x000002f4       0x12 ./lib/avr_usart.o
                0x000002f4                USART_tx
 .text.USART_rx
                0x00000306        0xe ./lib/avr_usart.o
                0x00000306                USART_rx
 .text.usart_putchar
                0x00000314       0x16 ./lib/avr_usart.o
 .text.__vector_18
                0x0000032a       0x4c ./lib/avr_usart.o
                0x0000032a                __vector_18
 .text.main     0x00000376       0x64 ./main.o
                0x00000376                main
 .text.CRC16_2  0x000003da       0x84 ./modbus.o
                0x000003da                CRC16_2
 .text.modbus_write
                0x0000045e       0x80 ./modbus.o
                0x0000045e                modbus_write
 .text.is_pkg_ready
                0x000004de       0x16 ./modbus.o
                0x000004de                is_pkg_ready
 .text.modbus_receive
                0x000004f4       0x2e ./modbus.o
                0x000004f4                modbus_receive
 .text.init     0x00000522        0xe ./ringbuffer.o
                0x00000522                init
 .text.rbuf_empty
                0x00000530       0x10 ./ringbuffer.o
                0x00000530                rbuf_empty
 .text.rbuf_full
                0x00000540       0x10 ./ringbuffer.o
                0x00000540                rbuf_full
 .text.read     0x00000550       0x36 ./ringbuffer.o
                0x00000550                read
 .text.write    0x00000586       0x3c ./ringbuffer.o
                0x00000586                write
 .text.ring_buffer_size
                0x000005c2        0x6 ./ringbuffer.o
                0x000005c2                ring_buffer_size
 .text.sensor_init
                0x000005c8       0x10 ./sensores.o
                0x000005c8                sensor_init
 .text.__vector_4
                0x000005d8       0x58 ./sensores.o
                0x000005d8                __vector_4
 .text.get_sensor
                0x00000630       0x14 ./sensores.o
                0x00000630                get_sensor
 .text.libgcc   0x00000644        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000644        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000644        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000644        0xe c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
                0x00000644                memset
                0x00000652                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000652        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000652                exit
                0x00000652                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000652        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000656                _etext = .

.data           0x00800100       0x16 load address 0x00000656
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 .data          0x00800100        0x0 ./lib/avr_i2c.o
 .data          0x00800100        0x0 ./lib/avr_spi.o
 .data          0x00800100        0x0 ./lib/avr_usart.o
 .data          0x00800100        0x0 ./main.o
 .data          0x00800100        0x0 ./modbus.o
 .data          0x00800100        0x0 ./ringbuffer.o
 .data          0x00800100        0x0 ./sensores.o
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 *(.data*)
 .data.usart_str
                0x00800100        0xe ./lib/avr_usart.o
                0x00800100                usart_str
 *(.rodata)
 *(.rodata*)
 .rodata.C.1.1462
                0x0080010e        0x8 ./modbus.o
 *(.gnu.linkonce.d*)
                0x00800116                . = ALIGN (0x2)
                0x00800116                _edata = .
                0x00800116                PROVIDE (__data_end, .)

.bss            0x00800116       0x56
                0x00800116                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800116        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00800116        0x0 ./lib/avr_i2c.o
 .bss           0x00800116        0x0 ./lib/avr_spi.o
 .bss           0x00800116        0x0 ./lib/avr_usart.o
 .bss           0x00800116        0x0 ./main.o
 .bss           0x00800116        0x0 ./modbus.o
 .bss           0x00800116        0x0 ./ringbuffer.o
 .bss           0x00800116        0x0 ./sensores.o
 .bss           0x00800116        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800116        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800116        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00800116        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(memset.o)
 .bss           0x00800116        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
 *(.bss*)
 .bss.write_done.1423
                0x00800116        0x1 ./lib/avr_i2c.o
 .bss.sensores  0x00800117        0x4 ./sensores.o
                0x00800117                sensores
 *(COMMON)
 COMMON         0x0080011b        0x8 ./lib/avr_i2c.o
                0x0080011b                i2c_status
 COMMON         0x00800123       0x43 ./ringbuffer.o
                0x00800123                rbuf
 COMMON         0x00800166        0x6 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(iob.o)
                0x00800166                __iob
                0x0080016c                PROVIDE (__bss_end, .)
                0x00000656                __data_load_start = LOADADDR (.data)
                0x0000066c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080016c        0x0
                0x0080016c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080016c                PROVIDE (__noinit_end, .)
                0x0080016c                _end = .
                0x0080016c                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(trab_final_sensores.elf elf32-avr)
LOAD linker stubs
